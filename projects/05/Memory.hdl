// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

// RAM16K(0x0000 ~ 0x3FFF): 000 0000 0000 0000  ~ 011 1111 1111 1111
// Screen(0x4000 ~ 0x5FFF): 100 0000 0000 0000 ~ 101 1111 1111 1111
// Keyboard(0x6000 ~ ): 110 0000 0000 0000 ~ 이후의 범위는 키보드 맵에 따라 달라짐

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // address[13..14] 기준
    // 00, 01은 RAM
    // 10은 Screen
    // 11은 Keyboard
    DMux4Way(in=load, sel=address[13..14], a=ramLoad0, b=ramLoad1, c=screenLoad, d=keyboardLoad);

    // ram0 또는 ram1이 출력이 되면 어떤 값이든 RAM16K로 쏴주면 됨
    Or(a=ramLoad0, b=ramLoad1, out=ramLoad);
    RAM16K(in=in, load=ramLoad, address=address[0..13], out=ramOut);

    // screen
    Screen(in=in, load=screenLoad, address=address[0..12], out=screenOut);

    // keyboard는 out만 함
    Keyboard(out=keyboardOut);
    
    // 하나만 출력해줌
    Mux4Way16(a=ramOut, b=ramOut, c=screenOut, d=keyboardOut, sel=address[13..14], out=out);
}